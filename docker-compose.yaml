services:
  django:
    container_name: backend
    build: backend
    entrypoint: /entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  celery:
    container_name: celery
    command: celery -A config.celery worker -l DEBUG --max-memory-per-child=300000
    build: backend
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - django
      - redis

  daphne:
    container_name: daphne
    build: backend
    entrypoint: /entrypoint.sh
    command: daphne -b 0.0.0.0 -p 8001 config.asgi:application
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - redis

  angular:
    container_name: frontend
    build: frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - django

  postgres:
    container_name: postgres
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_db

  redis:
    container_name: redis
    image: redis:7.4.0

volumes:
  postgres_data: